'use strict';

//task 1
const tc = prompt('Task #1. Enter Tc');
let tf = (9 / 5) * tc + 32
console.log('Tf = ' + tf);
alert('Tf is: ' + tf);

//task 2
const name = 'Vasiliy';
const admin = name;
alert('Task #2. Admin name is: ' + admin);

//task 3
let result = 1000 + '108';
alert('Task #3. 1000 + "108" = ' + result);

//task 4
/*async
Атрибут async означает, что скрипт абсолютно независим:
Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.
Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга:
DOMContentLoaded может произойти как до асинхронного скрипта(если асинхронный скрипт завершит загрузку после того, как страница будет готова),
…так и после асинхронного скрипта(если он короткий или уже содержится в HTTP - кеше)
Остальные скрипты не ждут async, и скрипты casync не ждут другие скрипты.

defer
Атрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт в фоновом режиме, а затем запустить этот скрипт, когда DOM дерево будет полностью построено.
Скрипты с defer никогда не блокируют страницу.
Скрипты с defer всегда выполняются, когда дерево DOM готово, но до события DOMContentLoaded.
Отложенные с помощью defer скрипты сохраняют порядок относительно друг друга, как и обычные скрипты.
Поэтому, если сначала загружается большой скрипт, а затем меньшего размера, то последний будет ждать. */